{"version":3,"sources":["components/Nav.js","utils/handleChange.js","components/Signup.js","components/Login.js","components/GigForm.js","components/UpdateForm.js","components/Gigs.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","src","alt","handleChange","e","reqData","fn","req","target","name","role","value","suit","id","Signup","props","useState","setReqData","loading","setLoading","className","action","htmlFor","type","onChange","required","onClick","preventDefault","axios","method","url","data","then","res","console","log","status","handleLogin","window","localStorage","setItem","JSON","stringify","catch","err","alert","handleSubmit","Login","hasAccount","setHasAccount","obj","setUser","setLoggedIn","GigForm","musicians","public","date","hour","time","handleFormMusicians","reqCopy","musician","includes","filter","player","push","handleFormCheckbox","param","getTime","onInput","form","defaultValue","map","i","getGigs","createGig","gig","title","venue","venueAddress","gigDuration","defaultChecked","restaurant","description","notes","toggleUpdate","reqType","headers","Authorization","user","token","updateGig","Gigs","gigs","setGigs","display","setDisplay","showForm","setShowForm","months","setMonths","currentMonth","setCurrentMonth","useEffect","moment","Date","format","month","resCopy","current","sort","a","b","showAll","update","confirmDelete","toggleForm","isToggled","thisGig","setStatus","updateStatus","toggleConfirmDelete","selected","length","duration","durationMinutes","toggleShowAll","deleteGig","App","loggedIn","loggedInUser","getItem","parse","removeItem","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6535c166.chunk.js","sourcesContent":["export default function Nav() {\r\n  return (\r\n    <nav>\r\n      <img src=\"./dorados.jpg\" alt=\"Los Dorados Logo\" />\r\n    </nav>\r\n  )\r\n}\r\n","const handleChange = function (e, reqData, fn) {\r\n  const req = { ...reqData };\r\n\r\n  if (e.target.name === \"roleSelection\") {\r\n    req.role = e.target.value;\r\n  } else if (e.target.name === \"suit\") {\r\n    req.suit = e.target.value\r\n  }\r\n  else {\r\n    req[e.target.id] = e.target.value;\r\n  }\r\n  // console.log(req)\r\n  fn(req);\r\n}\r\n\r\nexport default handleChange;","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport handleChange from './../utils/handleChange';\r\n\r\nexport default function Signup(props) {\r\n  const [reqData, setReqData] = useState({})\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    axios({\r\n      method: 'post',\r\n      url: 'https://dorados-gig-tracker.herokuapp.com/api/v1/users/signup',\r\n      data: reqData\r\n    })\r\n      .then((res) => {\r\n        console.log('res: ', res)\r\n        setLoading(false);\r\n        if (res.status === 201) {\r\n          props.handleLogin(e, reqData);\r\n          window.localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n          // console.log(\"localStorage: \", JSON.parse(localStorage.getItem(\"user\")));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        alert(\"sorry could not sign up\", err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"signup wrapper\">\r\n      <h2>Sign Up</h2>\r\n\r\n      <form action=\"submit\">\r\n        <label htmlFor=\"name\">Name: </label>\r\n        <input name=\"name\" type=\"text\" id=\"name\" onChange={(e) => handleChange(e, reqData, setReqData)} required />\r\n\r\n        <label htmlFor=\"email\">Email: </label>\r\n        <input name=\"email\" type=\"text\" id=\"email\" onChange={(e) => handleChange(e, reqData, setReqData)} required />\r\n\r\n        <label htmlFor=\"password\">Password: </label>\r\n        <input name=\"password\" type=\"password\" id=\"password\" onChange={(e) => handleChange(e, reqData, setReqData)} required />\r\n\r\n        <label htmlFor=\"passwordConfirm\">Confirm Password: </label>\r\n        <input name=\"passwordConfirm\" type=\"password\" id=\"passwordConfirm\" onChange={(e) => handleChange(e, reqData, setReqData)} required />\r\n\r\n        <fieldset className=\"wrapper\" onChange={(e) => handleChange(e, reqData, setReqData)} required>\r\n          <legend>Role:</legend>\r\n\r\n          <div>\r\n            <input id=\"general\" type=\"radio\" name=\"roleSelection\" value=\"user\" />\r\n            <label htmlFor=\"user\">I'm hiring Los Dorados!</label>\r\n          </div>\r\n\r\n          <div>\r\n            <input id=\"member\" type=\"radio\" name=\"roleSelection\" value=\"member\" />\r\n            <label htmlFor=\"user\">I'm a member of Los Dorados.</label>\r\n          </div>\r\n\r\n        </fieldset>\r\n\r\n        <button type=\"submit\" onClick={(e) => handleSubmit(e, 'post', reqData, 'users/signup')}>Sign up</button>\r\n      </form>\r\n      {\r\n        loading ? <div className=\"loader\"><div className=\"lds-ripple\"><div></div><div></div></div></div> : null\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Signup from './Signup'\r\nimport handleChange from './../utils/handleChange';\r\n\r\nexport default function Login(props) {\r\n  const [reqData, setReqData] = useState({});\r\n  const [hasAccount, setHasAccount] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleLogin = (e, obj) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    axios({\r\n      method: 'post',\r\n      url: 'https://dorados-gig-tracker.herokuapp.com/api/v1/users/login',\r\n      data: obj\r\n    })\r\n      .then((res) => {\r\n        props.setUser(res.data);\r\n        window.localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n        props.setLoggedIn(true);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        alert(\"sorry could not log you in\", err)\r\n      })\r\n  }\r\n  return (\r\n    <div className=\"login\">\r\n      {\r\n        hasAccount ?\r\n          <div className=\"loginForm\">\r\n            <h1>Login</h1>\r\n\r\n            <form action=\"submit\">\r\n\r\n              <label htmlFor=\"emailInput\">Email: </label>\r\n              <input name=\"emailInput\" type=\"email\" id=\"email\" onChange={(e) => handleChange(e, reqData, setReqData)} />\r\n\r\n              <label htmlFor=\"passwordInput\">Password: </label>\r\n              <input name=\"passwordInput\" type=\"password\" id=\"password\" onChange={(e) => handleChange(e, reqData, setReqData)} />\r\n\r\n              <button type=\"submit\" onClick={(e) => { handleLogin(e, reqData) }}>Login</button>\r\n\r\n            </form>\r\n\r\n            <button className=\"signupButton\"\r\n              onClick={() => setHasAccount(false)}\r\n            >Don't have an account? Sign Up</button>\r\n          </div> :\r\n\r\n          <Signup handleLogin={handleLogin} setReqData={setReqData} />\r\n      }\r\n      {\r\n        loading ? <div className=\"loader\"><div className=\"lds-ripple\"><div></div><div></div></div></div> : null\r\n      }\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport handleChange from './../utils/handleChange';\r\n\r\nexport default function GigForm(props) {\r\n  const [reqData, setReqData] = useState({\r\n    musicians: [],\r\n    public: false,\r\n    date: '',\r\n    hour: '',\r\n    time: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const bandArr = [\"Alex\", \"Angel\", \"Boris\", \"Mark\", \"Jeremy\", \"Julian\", \"Matt\", \"MikeViolin\", \"MikeTrumpet\", \"Nathan\", \"Pat\", \"Paul\", \"Ray\", \"Roberto\"];\r\n  const endpoint = 'https://dorados-gig-tracker.herokuapp.com/api/v1/gigs'\r\n\r\n  const createGig = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true)\r\n    axios({\r\n      method: 'post',\r\n      url: endpoint,\r\n      data: reqData\r\n    })\r\n      .then(() => {\r\n        setLoading(false);\r\n        props.getGigs();\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        alert(`Error: ${err}`)\r\n      })\r\n  }\r\n\r\n  const handleFormMusicians = (e) => {\r\n    const reqCopy = { ...reqData };\r\n    const musician = e.target.id;\r\n    if (reqCopy.musicians.includes(musician)) {\r\n      reqCopy.musicians = reqCopy['musicians'].filter(player => player !== musician);\r\n    } else {\r\n      reqCopy.musicians.push(musician);\r\n    }\r\n    setReqData(reqCopy);\r\n  }\r\n\r\n  const handleFormCheckbox = (param) => {\r\n    const reqCopy = { ...reqData };\r\n    reqCopy[param] = !reqCopy[param];\r\n\r\n    setReqData(reqCopy);\r\n  }\r\n\r\n  const getTime = (e) => {\r\n    const reqCopy = { ...reqData };\r\n    if (e.target.name === \"date\") {\r\n      reqCopy.date = e.target.value\r\n    } else if (e.target.name === \"hour\") {\r\n      reqCopy.hour = e.target.value\r\n    }\r\n    reqCopy.time = reqCopy.date + \" \" + reqCopy.hour;\r\n\r\n    setReqData(reqCopy);\r\n  }\r\n\r\n  return (\r\n    <div className=\"createGig wrapper\">\r\n      <h2>New Gig</h2>\r\n      <form action=\"submit\" id=\"createGig\">\r\n\r\n        {/* Gig Title */}\r\n        <label htmlFor=\"title\">title (more than 4 characters, required): </label>\r\n        <input name=\"title\" type=\"text\" id=\"title\" onChange={(e) => handleChange(e, reqData, setReqData)} required />\r\n\r\n        {/* Gig venue */}\r\n        <label htmlFor=\"venue\">venue: </label>\r\n        <input name=\"venue\" type=\"text\" id=\"venue\" onChange={(e) => handleChange(e, reqData, setReqData)} />\r\n\r\n        {/* Venue Address */}\r\n        <label htmlFor=\"venueAddress\">Venue Address (required): </label>\r\n        <input name=\"venueAddress\" type=\"text\" id=\"venueAddress\" onChange={(e) => handleChange(e, reqData, setReqData)} required />\r\n\r\n        {/* Gig start time */}\r\n        <div>\r\n          <label htmlFor=\"date\">Date (required): </label>\r\n          <input name=\"date\" type=\"date\" onChange={(e) => getTime(e)} required />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"hour\">Hour (required): </label>\r\n          <input name=\"hour\" id=\"hour\" type=\"time\" onInput={(e) => getTime(e)} required />\r\n        </div>\r\n\r\n        {/* Gig Duration */}\r\n        <div>\r\n          <label htmlFor=\"gigDuration\">Gig Duration: </label>\r\n          <select\r\n            name=\"gigDuration\"\r\n            id=\"gigDuration\"\r\n            form=\"createGig\"\r\n            onChange={(e) => handleChange(e, reqData, setReqData)}>\r\n            <option value=\"\" defaultValue>Provide Gig Length</option>\r\n            <option value=\"0.5\">30mins</option>\r\n            <option value=\"1\">1 hour</option>\r\n            <option value=\"2\">2 hours</option>\r\n            <option value=\"3\">3 hours</option>\r\n          </select>\r\n        </div>\r\n\r\n\r\n        <fieldset className=\"chooseMusicians\">\r\n          <legend>Choose musicians</legend>\r\n          {\r\n            bandArr.map((musician, i) => {\r\n              return (\r\n                <div key={\"musician\" + i} className='musicianCheck'>\r\n                  <input type=\"checkbox\" id={musician} name={musician} onChange={handleFormMusicians} />\r\n                  <label htmlFor={musician} >{musician} </label>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </fieldset>\r\n\r\n        <div>\r\n          <label htmlFor=\"public\">public: </label>\r\n          <input\r\n            name=\"public\"\r\n            type=\"checkbox\"\r\n            id=\"public\"\r\n            onChange={(e) => handleFormCheckbox(e.target.id)} />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"restaurant\">restaurant gig? </label>\r\n          {/* checkbox: boolean */}\r\n          <input\r\n            name=\"restaurant\"\r\n            type=\"checkbox\"\r\n            id=\"restaurant\"\r\n            onChange={(e) => handleFormCheckbox(e.target.id)} />\r\n        </div>\r\n\r\n        <label htmlFor=\"description\">description: </label>\r\n        <input name=\"description\" type=\"text\" id=\"description\" onChange={(e) => handleChange(e, reqData, setReqData)} />\r\n\r\n        <fieldset\r\n          className=\"chooseSuit\"\r\n          onChange={(e) => handleChange(e, reqData, setReqData)}>\r\n          <legend>Choose suit </legend>\r\n\r\n          <div>\r\n            <input name=\"suit\" type=\"radio\" id=\"black\" value=\"black\" />\r\n            <label htmlFor=\"black\">Black</label>\r\n          </div>\r\n\r\n          <div>\r\n            <input name=\"suit\" type=\"radio\" id=\"red\" value=\"red\" />\r\n            <label htmlFor=\"red\">Red</label>\r\n          </div>\r\n\r\n          <div>\r\n            <input name=\"suit\" type=\"radio\" id=\"brown\" value=\"brown\" />\r\n            <label htmlFor=\"brown\">Brown</label>\r\n          </div>\r\n\r\n          <div>\r\n            <input name=\"suit\" type=\"radio\" id=\"grey\" value=\"grey\" />\r\n            <label htmlFor=\"grey\">Grey</label>\r\n          </div>\r\n\r\n          <div>\r\n            <input name=\"suit\" type=\"radio\" id=\"canada\" value=\"canada\" />\r\n            <label htmlFor=\"canada\">Canada White</label>\r\n          </div>\r\n\r\n        </fieldset>\r\n\r\n        <label htmlFor=\"notes\">notes: </label>\r\n        <input name=\"notes\" type=\"text\" id=\"notes\" onChange={(e) => handleChange(e, reqData, setReqData)} />\r\n\r\n        <button type=\"reset\">Reset Form</button>\r\n        <button type='submit' onClick={(e) => createGig(e)}>Create Gig</button>\r\n      </form>\r\n      {\r\n        loading ? <div className=\"loader\"><div className=\"lds-ripple\"><div></div><div></div></div></div> : null\r\n      }\r\n    </div>\r\n  )\r\n}","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport handleChange from './../utils/handleChange';\r\n\r\nexport default function GigForm(props) {\r\n  const [reqData, setReqData] = useState({\r\n    musicians: [...props.gig.musicians],\r\n    public: props.gig.public,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const bandArr = [\"Alex\", \"Angel\", \"Boris\", \"Mark\", \"Jeremy\", \"Julian\", \"Matt\", \"MikeViolin\", \"MikeTrumpet\", \"Nathan\", \"Pat\", \"Paul\", \"Ray\", \"Roberto\"];\r\n  const suits = [\"black\", \"red\", \"brown\", \"grey\", \"canada\"];\r\n\r\n  const updateGig = (e, reqType, id) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    axios({\r\n      method: reqType,\r\n      url: 'https://dorados-gig-tracker.herokuapp.com/api/v1/gigs/' + id,\r\n      data: reqData,\r\n      headers: {\r\n        Authorization: 'Bearer ' + props.user.token\r\n      }\r\n    })\r\n      .then(() => {\r\n        setLoading(false);\r\n        props.getGigs();\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        alert(`Error: ${err}`)\r\n      })\r\n  }\r\n\r\n  const handleFormMusicians = (e) => {\r\n    const reqCopy = { ...reqData };\r\n    const musician = e.target.id;\r\n    if (reqCopy.musicians.includes(musician)) {\r\n      reqCopy.musicians = reqCopy['musicians'].filter(player => player !== musician);\r\n    } else {\r\n      reqCopy.musicians.push(musician);\r\n    }\r\n    setReqData(reqCopy);\r\n  }\r\n\r\n  const handleFormCheckbox = (param) => {\r\n    const reqCopy = { ...reqData };\r\n    reqCopy[param] = !reqCopy[param];\r\n\r\n    setReqData(reqCopy);\r\n  }\r\n\r\n  const getTime = (e) => {\r\n    const reqCopy = { ...reqData };\r\n    if (e.target.name === \"date\") {\r\n      reqCopy.date = e.target.value\r\n    } else if (e.target.name === \"hour\") {\r\n      reqCopy.hour = e.target.value\r\n    }\r\n    reqCopy.time = reqCopy.date + \" \" + reqCopy.hour;\r\n\r\n    setReqData(reqCopy);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"createGig\">\r\n      <h2>Update Gig</h2>\r\n      <form action=\"submit\" id=\"createGig\">\r\n\r\n        {/* Gig Title */}\r\n        <label htmlFor=\"title\">title (more than 4 characters): </label>\r\n        <input name=\"title\" type=\"text\" id=\"title\" defaultValue={props.gig.title} onChange={(e) => handleChange(e, reqData, setReqData)} />\r\n\r\n        {/* Gig venue */}\r\n        <label htmlFor=\"venue\">venue: </label>\r\n        <input name=\"venue\" type=\"text\" id=\"venue\" defaultValue={props.gig.venue} onChange={(e) => handleChange(e, reqData, setReqData)} />\r\n\r\n        {/* Venue Address */}\r\n        <label htmlFor=\"venueAddress\">Venue Address: </label>\r\n        <input name=\"venueAddress\" type=\"text\" id=\"venueAddress\" defaultValue={props.gig.venueAddress} onChange={(e) => handleChange(e, reqData, setReqData)} />\r\n\r\n        {/* Gig start time */}\r\n        <div>\r\n\r\n          <label htmlFor=\"date\">Date: </label>\r\n          <input name=\"date\" type=\"date\" onChange={(e) => getTime(e)} />\r\n        </div>\r\n        <div>\r\n\r\n          <label htmlFor=\"hour\">Hour: </label>\r\n          <input name=\"hour\" id=\"hour\" type=\"time\" onChange={(e) => getTime(e)} />\r\n        </div>\r\n\r\n        {/* Gig Duration */}\r\n        <div>\r\n          <label htmlFor=\"gigDuration\">Gig Duration: </label>\r\n          <select\r\n            name=\"gigDuration\"\r\n            id=\"gigDuration\"\r\n            form=\"createGig\"\r\n            defaultValue={props.gig.gigDuration}\r\n            onChange={(e) => handleChange(e, reqData, setReqData)}>\r\n            <option value=\"\" defaultValue>Provide Gig Length</option>\r\n            <option value=\"0.5\">30mins</option>\r\n            <option value=\"1\">1 hour</option>\r\n            <option value=\"2\">2 hours</option>\r\n            <option value=\"3\">3 hours</option>\r\n          </select>\r\n        </div>\r\n\r\n        <fieldset className=\"chooseMusicians\">\r\n          <legend>Choose musicians</legend>\r\n          {\r\n            bandArr.map((musician, i) => {\r\n              return (\r\n                <div key={i} className='musicianCheck'>\r\n                  <input type=\"checkbox\" id={musician} name={musician}\r\n                    defaultChecked={props.gig.musicians.includes(musician) ? 'checked' : null}\r\n                    onChange={handleFormMusicians} />\r\n                  <label htmlFor={musician} >{musician} </label>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </fieldset>\r\n\r\n        <div>\r\n          <label htmlFor=\"public\">public: </label>\r\n          <input name=\"public\" type=\"checkbox\" id=\"public\" defaultChecked={props.gig.public ? 'checked' : null} onChange={(e) => handleFormCheckbox(e.target.id)} />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"restaurant\">restaurant gig? </label>\r\n          <input name=\"restaurant\" type=\"checkbox\" id=\"restaurant\" defaultChecked={props.gig.restaurant ? 'checked' : null} onChange={(e) => handleFormCheckbox(e.target.id)} />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"description\">description: </label>\r\n          <input name=\"description\" type=\"text\" id=\"description\" defaultValue={props.gig.description} onChange={(e) => handleChange(e, reqData, setReqData)} />\r\n        </div>\r\n\r\n        <fieldset\r\n          className=\"chooseSuit\"\r\n          onChange={(e) => handleChange(e, reqData, setReqData)}>\r\n          <legend>Choose suit </legend>\r\n          {\r\n            suits.map((suit, i) => {\r\n              return (\r\n                <div>\r\n                  {\r\n                    suit === props.gig.suit ?\r\n                      <input key={suit + i} name=\"suit\" type=\"radio\" id={suit} value={suit} defaultChecked /> :\r\n                      <input key={suit + i} name=\"suit\" type=\"radio\" id={suit} value={suit} />\r\n                  }\r\n                  <label htmlFor={suit}> {suit}</label>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </fieldset>\r\n\r\n        <label htmlFor=\"notes\">notes: </label>\r\n        <input name=\"notes\" type=\"text\" id=\"notes\" defaultValue={props.gig.notes} onChange={(e) => handleChange(e, reqData, setReqData)} />\r\n\r\n        <button onClick={(e) => { e.preventDefault(); props.toggleUpdate(e, props.gig) }}>Close</button>\r\n        <button type='submit' onClick={(e) => updateGig(e, 'patch', props.gig.id)}>Update Gig</button>\r\n      </form>\r\n      {\r\n        loading ? <div className=\"loader\"><div className=\"lds-ripple\"><div></div><div></div></div></div> : null\r\n      }\r\n    </div>\r\n  )\r\n}","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport GigForm from './GigForm';\r\nimport UpdateForm from './UpdateForm'\r\nimport moment from 'moment';\r\n\r\nexport default function Gigs(props) {\r\n  const [gigs, setGigs] = useState([])\r\n  const [display, setDisplay] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [loading, setLoading] = useState(false)\r\n  const [months, setMonths] = useState([]);\r\n  const [currentMonth, setCurrentMonth] = useState('');\r\n\r\n  useEffect(() => {\r\n    getGigs();\r\n    setCurrentMonth(moment(Date()).format('YYYY MM'));\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setDisplay(gigs.filter(gig => gig.month === currentMonth));\r\n  }, [gigs, currentMonth])\r\n\r\n  // API req for ALL GIGS\r\n  const getGigs = () => {\r\n    setLoading(true);\r\n    axios({\r\n      method: 'get',\r\n      url: 'https://dorados-gig-tracker.herokuapp.com/api/v1/gigs'\r\n    })\r\n      .then(res => {\r\n        setLoading(false);\r\n        const resCopy = [...res.data.data.gigs];\r\n        // const filtered = resCopy.filter((gig) => {\r\n        //   return gig.musicians.includes(props.user.data.user.name)\r\n        // })\r\n        // console.log(filtered);\r\n        const current = [];\r\n        resCopy.map((gig) => {\r\n          gig.time = moment(gig.time).format('MMMM DD, YYYY h:mm A');\r\n          gig.month = moment(gig.time).format('YYYY MM')\r\n          if (!current.includes(gig.month)) {\r\n            current.push(gig.month);\r\n          }\r\n          return gig;\r\n        })\r\n        resCopy.sort((a, b) => {\r\n          return new Date(a.time) - new Date(b.time)\r\n        })\r\n        resCopy.showAll = false;\r\n        resCopy.update = false;\r\n        resCopy.confirmDelete = false;\r\n        setMonths(current);\r\n        setShowForm(false);\r\n        setGigs(resCopy);\r\n        setDisplay(gigs);\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        alert('sorry, was not able to get the gigs', err);\r\n      })\r\n  }\r\n\r\n  const toggleForm = () => {\r\n    let isToggled = showForm;\r\n    isToggled = !isToggled;\r\n    setShowForm(isToggled);\r\n  }\r\n\r\n  const toggleUpdate = (e, thisGig) => {\r\n    e.preventDefault();\r\n    const gigsCopy = [...gigs];\r\n    const setStatus = gigsCopy.map(gig => {\r\n      if (gig.id === thisGig.id) {\r\n        gig.updateStatus = !gig.updateStatus;\r\n        return gig\r\n      } else return gig\r\n    })\r\n    setGigs(setStatus);\r\n  }\r\n  const toggleConfirmDelete = (e, thisGig) => {\r\n    e.preventDefault();\r\n    const gigsCopy = [...gigs];\r\n    const setStatus = gigsCopy.map(gig => {\r\n      if (gig.id === thisGig.id) {\r\n        gig.confirmDelete = !gig.confirmDelete;\r\n        return gig\r\n      } else return gig\r\n    })\r\n    setGigs(setStatus);\r\n  }\r\n  const toggleShowAll = (e, thisGig) => {\r\n    e.preventDefault();\r\n    const gigsCopy = [...gigs];\r\n    const setStatus = gigsCopy.map(gig => {\r\n      if (gig.id === thisGig.id) {\r\n        gig.showAll = !gig.showAll;\r\n        return gig\r\n      } else return gig\r\n    })\r\n    setGigs(setStatus);\r\n  }\r\n\r\n  const deleteGig = (e, id) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    axios({\r\n      method: 'delete',\r\n      url: `https://dorados-gig-tracker.herokuapp.com/api/v1/gigs/${id}`,\r\n      headers: {\r\n        Authorization: 'Bearer ' + props.user.token\r\n      }\r\n    })\r\n      .then(() => {\r\n        setLoading(false);\r\n        getGigs();\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        alert(\"sorry, was not able to delete the gig\", err)\r\n      })\r\n  }\r\n\r\n  const setDateSelect = (id, val) => {\r\n    let element = document.getElementById(id);\r\n    element.value = val;\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      {\r\n        props.user.data.user.role === 'admin' ?\r\n          <button\r\n            onClick={toggleForm}\r\n            className=\"createGigButton\"\r\n          >Create a new Gig</button> : null\r\n      }\r\n      {\r\n        props.user.data.user.role === 'admin' &&\r\n          showForm ?\r\n          <div>\r\n            <GigForm\r\n              getGigs={getGigs}\r\n              gigs={gigs}\r\n              user={props.user}\r\n            />\r\n            <button onClick={toggleForm}>Hide Form</button>\r\n          </div> : null\r\n      }\r\n      <h3>Here are the gigs, {props.user.data.user.name}:</h3>\r\n      <div className=\"gigContainer\">\r\n        <form action=\"submit\" onChange={(e) => setCurrentMonth(e.target.value)}>\r\n          <label htmlFor=\"selectMonth\">Select Month:</label>\r\n          <select name=\"selectMonth\" id=\"selectMonth\">\r\n            {\r\n              months.map(month => {\r\n                return (\r\n                  <option selected={month === currentMonth ? \"selected\" : null}>{month}</option>\r\n                )\r\n              })\r\n            }\r\n          </select>\r\n        </form>\r\n        {\r\n          display.length > 0 ? display.map(gig => {\r\n            return (\r\n              <div className=\"gig\" key={gig.id}>\r\n                <h4>{gig.time}: {gig.title}</h4>\r\n                <p>Address: {gig.venueAddress}</p>\r\n                <p>Duration: {gig.duration}</p>\r\n                <p>Musicians: {gig.musicians.map((musician) => {\r\n                  return (<span key={musician}>{musician} </span>)\r\n                })}</p>\r\n                <p>Public/private: {gig.public ? 'public gig' : 'private'}</p>\r\n                <p>Duration: {gig.durationMinutes} min</p>\r\n\r\n                <button onClick={(e) => toggleShowAll(e, gig)}>More info</button>\r\n                {\r\n                  gig.showAll ?\r\n                    <div>\r\n                      <p>Description: {gig.description}</p>\r\n                      <p>Suit: {gig.suit}</p>\r\n                      <p>Restaurant?: {gig.restaurant ? 'Restaurant Gig' : 'Not a restaurant gig'}</p>\r\n                      <p>Notes: {gig.notes}</p>\r\n                    </div> : null\r\n                }\r\n\r\n                {\r\n                  props.user.data.user.role === 'admin' ?\r\n                    <div>\r\n                      <button onClick={(e) => toggleUpdate(e, gig)}>Update</button>\r\n                      <button onClick={(e) => { toggleConfirmDelete(e, gig) }}>Delete</button>\r\n                    </div> : null\r\n                }\r\n                {\r\n                  gig.updateStatus ?\r\n                    <UpdateForm\r\n                      gigs={gigs}\r\n                      getGigs={getGigs}\r\n                      gig={gig}\r\n                      toggleUpdate={toggleUpdate}\r\n                      user={props.user} /> : null\r\n                }\r\n                {\r\n                  gig.confirmDelete ?\r\n                    <div>\r\n                      <p>Are you sure you want to Delete?</p>\r\n                      <button onClick={(e) => deleteGig(e, gig.id)}>Delete</button>\r\n                      <button onClick={(e) => toggleConfirmDelete(e, gig)}>Cancel</button>\r\n                    </div>\r\n                    : null\r\n                }\r\n                {\r\n                  loading ? <div className=\"loader\"><div className=\"lds-ripple\"><div></div><div></div></div></div> : null\r\n                }\r\n              </div>\r\n            )\r\n          }) : <p>No gigs yet! Add a new gig with the button above</p>}\r\n      </div>\r\n    </div >\r\n  )\r\n}","import { useState, useEffect } from 'react';\nimport Nav from './components/Nav'\nimport Login from './components/Login'\nimport Gigs from './components/Gigs';\n\nexport default function App() {\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [user, setUser] = useState({})\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (loggedInUser) {\n      // const foundUser = JSON.parse(loggedInUser);\n      setUser(JSON.parse(loggedInUser));\n      setLoggedIn(true);\n    }\n  }, []);\n\n  const logout = () => {\n    window.localStorage.removeItem(\"user\");\n    setLoggedIn(false);\n    setUser({})\n  }\n\n  // const appUrl = process.env.PUBLIC_URL || 'http://localhost:3000/';\n\n  return (\n    <div className=\"app\">\n      <header>\n        <Nav />\n        {\n          loggedIn ?\n            <div className='buttonContainer'>\n              <button onClick={() => logout()}>Logout</button>\n            </div> : null\n        }\n      </header>\n      <main>\n        {\n          loggedIn ?\n            <div>\n              <Gigs user={user} />\n            </div> :\n            <Login setLoggedIn={setLoggedIn} setUser={setUser} />\n        }\n\n      </main>\n      <footer>Created by <a href=\"http://borisweb.dev\">Boris</a> for <a href=\"https://www.losdoradoscanada.com/\">Mariachi Los Dorados</a></footer>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}